##[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include timelapse.cfg]

[autotune_tmc stepper_x]
motor: moons-ms17hd6p4200
sg4_thrs: 93  # 70~125
[autotune_tmc stepper_y]
motor: moons-ms17hd6p4200
sg4_thrs: 93  # 70~130
[autotune_tmc stepper_z]
motor: moons-ms17hd6p4200
[autotune_tmc stepper_z1]
motor: moons-ms17hd6p4200
[autotune_tmc stepper_z2]
motor: moons-ms17hd6p4200
[autotune_tmc stepper_z3]
motor: moons-ms17hd6p4200
[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg-9T

[manual_probe]

[filament_motion_sensor SFS_T0]
switch_pin: ^!PB10
detection_length: 7.0
extruder: extruder
pause_on_runout: True 
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
  M117 Runout Detected!


[input_shaper]
shaper_type_x: 2hump_ei 
shaper_freq_x: 68.6
damping_ratio_x: 0.111
shaper_type_y: mzv
shaper_freq_y: 35.2
damping_ratio_y: 0.069


#####################################################################
#   UUID Setting
#####################################################################
[mcu]
canbus_uuid: cc3bf50f96ab

[mcu sb2040]
canbus_uuid: d3bdb09be729
#166965740477   2240
#7d1e80096a67   bad 2209

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 8000    			
max_z_velocity: 25 			
max_z_accel: 350
square_corner_velocity: 5.0



#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350

homing_speed: 40
homing_retract_dist: 10
homing_positive_dir: true
use_sensorless_homing: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: true
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^PF4
home_current: 0.8
current_change_dwell_time: 0.2

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 0
position_max: 355

##--------------------------------------------------------------------
homing_speed: 40
homing_retract_dist: 10
homing_positive_dir: false
use_sensorless_homing: true

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: true
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^PF3
home_current: 0.8
current_change_dwell_time: 0.2

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PB9
interpolate: True
run_current: 1.0
sense_resistor: 0.110

##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: True
run_current: 1.0
sense_resistor: 0.110 


##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: True
run_current: 1.0
sense_resistor: 0.110 



##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PG9
dir_pin: PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: True
run_current: 1.0
sense_resistor: 0.110 







[extruder]
step_pin: sb2040:gpio9
dir_pin: sb2040:gpio10 
enable_pin: !sb2040:gpio7

rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16

nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.02
min_extrude_temp: 20
max_extrude_cross_section: 6
max_extrude_only_distance: 180

heater_pin: sb2040:gpio6  
sensor_type: PT1000
pullup_resistor: 1000
sensor_pin: sb2040:gpio27 
pwm_cycle_time: 0.02  # = 50Hz
smooth_time: 1.5
max_power: 1
min_temp: 0
max_temp: 330

control: pid_v

[tmc2240 extruder]
cs_pin: sb2040:gpio11               # SPI 片选Pin脚定义
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2
interpolate: true
rref: 12300                         # 驱动采样电阻
run_current: 0.6
stealthchop_threshold: 99999

[fan]
pin: sb2040:gpio13 
kick_start_time: 0.5
off_below: 0.5

[heater_fan nevermore_fan]
#  Exhaust fan - Nevermore Filter
pin: PF6
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 68
fan_speed: 1.0 

[heater_fan hotend_fan]
pin: sb2040:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PB1
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.02  # = 50Hz
control: pid_v

[temperature_sensor buildplate]
sensor_type: Generic 3950
sensor_pin: PB0
min_temp: -40
max_temp: 120

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC5
min_temp: -40
max_temp: 100

[temperature_sensor SB2040]
sensor_type: ATC Semitec 104GT-2
sensor_pin: sb2040:gpio26

[temperature_sensor CB1]
sensor_type: temperature_host

[output_pin _probe_ready]
pin: sb2040:gpio29
shutdown_value: 0
value:0

[probe]
pin: ^sb2040:gpio28
speed: 8
samples: 3
samples_result: median
sample_retract_dist: 5
samples_tolerance: 0.03
samples_tolerance_retries: 8
activate_gcode:
    {% set PROBE_TEMP = 100 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M106 S255 ; 100% the part cooling fan to help the extruder cooling
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ [ PROBE_TEMP, ACTUAL_TEMP ] | min }
        TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        M106 S0   ; Stop the part cooling fan
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            M106 S255 ; 100% the part cooling fan to help the extruder cooling
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
            M106 S0   ; Stop the part cooling fan
        {% endif %}
    {% endif %}
    
    G4 P300
    SET_PIN PIN=_probe_ready VALUE=1
    G4 P300
deactivate_gcode:
    SET_PIN PIN=_probe_ready VALUE=0  



[safe_z_home]
home_xy_position: 175,175
speed: 80
z_hop: 5
home_y_before_x: True

[multi_pin controller_fans]
pins: PF7,PF9

[controller_fan controller_fan]
##  Controller fan
pin: multi_pin:controller_fans
max_power: 0.5
kick_start_time: 0.5
heater: heater_bed
idle_speed: 0.4
idle_timeout: 300


[quad_gantry_level]
gantry_corners:
	-50,0
	395,430
points:
	50,50
	50,300
	300,300
	300,50
speed: 130
adaptive_horizontal_move_z: True
horizontal_move_z: 10
retries: 15
retry_tolerance: 0.0125
max_adjust: 20
increasing_threshold: 0.0005

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    # Pass 1: Initial Coarse Leveling
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=10 RETRY_TOLERANCE=1
    # Pass 2: Fine Leveling and Accuracy
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=2
    
[bed_mesh]
speed: 220
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 340,340
#algorithm: bicubic
probe_count: 3
fade_start: 1
fade_end: 10

[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2
axes_map: -z, -y, -x

[resonance_tester]
probe_points:
  175, 175, 20
accel_chip: adxl345
accel_per_hz: 90

# [display]
# #	mini12864 LCD Display
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2

# [neopixel btt_mini12864]
# #	To control Neopixel RGB in mini12864 display
# pin: EXP1_6
# chain_count: 3
# initial_RED: 0.1
# initial_GREEN: 0.5
# initial_BLUE: 0.0
# color_order: RGB

# ##	Set RGB values on boot up for each Neopixel. 
# ##	Index 1 = display, Index 2 and 3 = Knob
# [delayed_gcode setdisplayneopixel]
# initial_duration: 1
# gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 



#################################################
################### Disco Led ###################
#################################################
[neopixel disco]
pin: PD15
chain_count: 50
color_order: GRB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3

# [pwm_cycle_time  _BEEPER_pin]
# pin: EXP1_1
# value: 0
# shutdown_value: 0
# cycle_time: 0.001
# #scale: 1000

# [gcode_macro start_tones]
# gcode: # A-D-A-E
#     { action_respond_info('start_tones') }
#     M300 S440  P220
#     M300 S587  P220
#     M300 S880  P220
#     M300 S1318  P220 

# [gcode_macro end_tones]
# gcode: # A-C-E-G
#     { action_respond_info('end_tones') }
#     M300 S880 P220
#     M300 S523 P220
#     M300 S329 P220
#     M300 S196 P220
    
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.


# #####################################################################
# #   Macros
# #####################################################################
# [gcode_macro PARK]
# gcode:
#     {% set th = printer.toolhead %}
#     G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

# [gcode_macro G32]
# gcode:
#     SAVE_GCODE_STATE NAME=STATE_G32
#     G90
#     G28
#     QUAD_GANTRY_LEVEL
#     G28
#     PARK
#     RESTORE_GCODE_STATE NAME=STATE_G32

   

# # https://github.com/jontek2/A-better-print_start-macro
# [gcode_macro PRINT_START]
# gcode:
#   # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#   {% set target_bed = params.BED|int %}
#   {% set target_extruder = params.EXTRUDER|int %}
#   {% set target_chamber = params.CHAMBER|default("40")|int %}
#   {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#   {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

#   # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
#   STATUS_HOMING         # Sets SB-leds to homing-mode
#   G28                   # Full home (XYZ)
#   G90                   # Absolut position

#   ##  Uncomment for bed mesh (1 of 2)
#   ## BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

#   # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
#   {% if params.BED|int > 90 %}
#     SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#     STATUS_HEATING                                      # Sets SB-leds to heating-mode
#     M106 S255                                           # Turns on the PT-fan

#     ##  Uncomment if you have a Nevermore.
#     #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

#     G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#     M190 S{target_bed + 10}                             # Sets the target temp + 10 for the bed
#     SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
#     TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
#     SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}   # Sets the target temp for the bed

#   # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
#   {% else %}
#     SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#     STATUS_HEATING                                      # Sets SB-leds to heating-mode
#     G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#     SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed + 10}   # Sets the target temp + 10 for the bed
#     TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed + 5}   # Waits for chamber to reach desired temp
#     SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Displays info
#     G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
#     SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}   # Sets the target temp for the bed
#   {% endif %}

#   # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
#   SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Displays info
#   SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150     # Heats the nozzle to 150c
#   TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150

#   ##  Uncomment for V2 (Quad gantry level AKA QGL)
#   SET_DISPLAY_TEXT MSG="QGL"      # Displays info
#   STATUS_LEVELING                 # Sets SB-leds to leveling-mode
#   quad_gantry_level               # Levels the buildplate via QGL
#   G28 Z                           # Homes Z again after QGL

#   ##  Uncomment for bed mesh (2 of 2)
#   ##SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
#   ##STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
#   ##bed_mesh_calibrate                 # Starts bed mesh

#   # Heats up the nozzle up to target via data from slicer
#   SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
#   STATUS_HEATING                                                # Sets SB-leds to heating-mode
#   G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
#   M107                                                          # Turns off partcooling fan
#   M109 S{target_extruder}                                       # Heats the nozzle to printing temp

#   # Gets ready to print by doing a purge line and updating the SB-leds
#   SET_DISPLAY_TEXT MSG="Printing"                  # Displays info
#   STATUS_PRINTING                                  # Sets SB-leds to printing-mode
#   G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
#   VORON_PURGE                                      # Purge Logo
#   G90                                              # Absolut position
#   start_tones   

# [gcode_macro PRINT_END]
# #   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
# gcode:
#     # safe anti-stringing move coords
#     {% set th = printer.toolhead %}
#     {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#     {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#     {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
#     SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#     M400                           ; wait for buffer to clear
#     G92 E0                         ; zero the extruder
#     G1 E-5.0 F1800                 ; retract filament
    
#     TURN_OFF_HEATERS
    
#     G90                                      ; absolute positioning
#     G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#     G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#     M107                                     ; turn off fan
    
#     BED_MESH_CLEAR
#     RESTORE_GCODE_STATE NAME=STATE_PRINT_END
#     end_tones


[gcode_macro CLEAN_NOZZLE]
gcode:
    { action_respond_info('CLEAN_NOZZLE') }
    M300
    {% if (printer.toolhead.homed_axes == 'xyz') %}
    SAVE_GCODE_STATE NAME=_CLEAN_NOZZLE_STATE
    G90
    G0 X50 Y355 Z10 F2000
    G0 Z0.5
    G0 X130 Y355 F2000
    G0 X50 Y355 F2000
    G0 X130 Y355 F2000
    G0 X50 Y355 F2000
    G0 Z30
    RESTORE_GCODE_STATE NAME=_CLEAN_NOZZLE_STATE MOVE=0
    {% else %}
    { action_respond_info('CLEAN_NOZZLE: NOT HOMED') }
    {% endif %}

[gcode_macro _km_options]
variable_park_x: 30
variable_park_y: 350
variable_load_speed: 800
variable_start_extruder_probing_temp: 110
variable_start_purge_length: 30.0
variable_start_purge_prime_length: 25.0
variable_start_bed_heat_delay: 120000
variable_start_bed_heat_overshoot: 10
variable_load_length: 120
variable_load_min_temp: 210
gcode:
  GCODE_ON_PRINT_STATUS STATUS=ready COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=ready COMMAND="STATUS_READY" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=filament_load COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=filament_unload COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH

  GCODE_ON_PRINT_STATUS STATUS=homing COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=homing COMMAND="STATUS_HOMING" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=leveling_gantry COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=leveling_gantry COMMAND="CLEAN_NOZZLE" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=leveling_gantry COMMAND="STATUS_LEVELING" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=calibrating_z COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=calibrating_z COMMAND="STATUS_CALIBRATING_Z" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=bed_heating COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=bed_heating COMMAND="STATUS_HEATING" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=chamber_heating COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=chamber_heating COMMAND="STATUS_HEATING" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=extruder_heating COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=extruder_heating COMMAND="STATUS_HEATING" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=purging COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=purging COMMAND="CLEAN_NOZZLE" WHEN=ALWAYS TYPE=ENTER 
  GCODE_ON_PRINT_STATUS STATUS=purging COMMAND="STATUS_BUSY" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=printing COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=printing COMMAND="STATUS_BUSY" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=pausing COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=pausing COMMAND="STATUS_BUSY" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=meshing COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=meshing COMMAND="CLEAN_NOZZLE" WHEN=ALWAYS TYPE=ENTER 
  GCODE_ON_PRINT_STATUS STATUS=meshing COMMAND="STATUS_MESHING" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=cancelling COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=cancelling COMMAND="STATUS_OFF" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=completing COMMAND="M118 @@@@@@STATUS_TEST " ARGS=1 WHEN=ALWAYS TYPE=BOTH
  GCODE_ON_PRINT_STATUS STATUS=completing COMMAND="STATUS_OFF" WHEN=ALWAYS TYPE=ENTER

  GCODE_ON_PRINT_STATUS STATUS=printing COMMAND="START_TONES" WHEN=ALWAYS TYPE=ENTER
  GCODE_ON_PRINT_STATUS STATUS=printing COMMAND="END_TONES" WHEN=PRINTING TYPE=ENTER FILTER_ENTER=ready,extruder_heating,bed_heating,purging
  ADJUST_SURFACE_OFFSETS

# This line includes all the standard macros.
[include klipper-macros/*.cfg]
[include klipper-macros/optional/bed_mesh.cfg]

[gcode_macro m191]
gcode:

[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.
  M106 S0 P0
  M106 S0 P1
  M106 S0 P2
  M106 S0 P3

[pause_resume]

[respond]

[save_variables]
filename: ~/printer_data/config/variables.cfg 

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[display_status]

[axis_twist_compensation]
calibrate_start_x: 20
calibrate_end_x: 330
calibrate_y: 175

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# pid_kp = 19.911
#*# pid_ki = 3.346
#*# pid_kd = 29.617
#*# pid_version = 1
#*# pid_target = 210.00
#*# pid_tolerance = 0.0200
#*#
#*# [heater_bed]
#*# pid_kp = 52.176
#*# pid_ki = 1.574
#*# pid_kd = 432.405
#*#
#*# [probe]
#*# z_offset = -0.210
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.037500, -0.060000, -0.060000
#*# 	-0.030000, -0.015000, -0.055000
#*# 	-0.060000, -0.042500, -0.087500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 142.13
#*# max_x = 195.11
#*# min_y = 159.9
#*# max_y = 190.08
